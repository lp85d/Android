name: Android Build CI
on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Accept Android SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        
      - name: Install Android SDK components
        run: $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0" "platforms;android-34" "platform-tools"
        
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: '8.13'
          cache-read-only: false
          
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y ffmpeg
        
      - name: Make scripts executable
        run: |
          chmod +x ./ci_build.sh
          chmod +x ./source.sh
          
      - name: Build application with full logging
        run: |
          # Создаем проект
          echo "=== Creating project ==="
          ./source.sh
          
          # Переходим в проект
          echo "=== Entering project directory ==="
          cd ParsPost
          ls -la
          
          # Проверяем gradlew
          if [ -f "gradlew" ]; then
            chmod +x ./gradlew
            echo "=== Gradle wrapper found and made executable ==="
          else
            echo "ERROR: gradlew not found!"
            exit 1
          fi
          
          # Собираем APK с полным логом
          echo "=== Starting Gradle build ==="
          ./gradlew clean assembleDebug --stacktrace --no-daemon 2>&1 | tee ../full_build.log
          
          # Проверяем результат
          if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
            echo "SUCCESS: APK built successfully!"
            ls -la app/build/outputs/apk/debug/
          else
            echo "ERROR: APK not found!"
            find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found"
          fi
          
          # Создаем отфильтрованный лог для артефакта
          cd ..
          cat full_build.log | grep -E "(ERROR:|FAILED:|FAILURE:|Warning:|Deprecated|BUILD SUCCESSFUL|BUILD FAILED|SUCCESS:|app-debug.apk)" > build.log || echo "No matches found" > build.log
        env:
          GRADLE_OPTS: "-Xmx2048m -XX:MaxMetaspaceSize=512m -Dorg.gradle.daemon=false"
          
      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log
          
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: ParsPost/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: warn
          
      - name: Output Artifact URL
        run: echo "Artifact URL completed"
